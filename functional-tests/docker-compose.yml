# See https://github.com/SeleniumHQ/docker-selenium#via-docker-compose
services:
  chrome:
    image: selenium/node-chrome:4.17.0-20240123
    shm_size: '2gb'
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
  edge:
    image: selenium/node-edge:4.1.2-20220217
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - VNC_NO_PASSWORD=1
      - SE_NODE_MAX_SESSIONS=2

  firefox:
    image: selenium/node-firefox:4.1.2-20220217
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - VNC_NO_PASSWORD=1
      - SE_NODE_MAX_SESSIONS=2

  # Selenium Grid/Hub
  selenium-hub:
    restart: always
    image: selenium/hub:4.17.0-20240123
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"

  # The tests themselves
  tests:
    container_name: functional-tests_tests_1
    build: .
    volumes:
      - ./:/tests
      - /tests/node_modules
      - ./errorShots:/tests/errorShots
    links:
      - api
      - selenium-hub
      # - nginx
      - idammanagement
    environment:
      - TEAMCITY_VERSION
      - IDENTITYAPI_AUTH_SERVICE_URI
      - IDENTITYAPI_IDENTIFIER
      - IDENTITYAPI_API_OAUTH_TOKEN_URL
      - IDENTITYAPI_API_CLIENTID
      - IDENTITYAPI_API_CLIENTSECRECT
      - IDENTITYAPI_API_GRANT_TYPE
      - IDENTITYAPI_API_AUDIENCE
      - IDENTITY_NOUSER_EMAIL
      - WEBAPP_API_IDENTIFIER
      - WEBAPP_GOOGLE_TRACK_ID
      - ACCOUNTS_EMAIL
      - ACCOUNTS_EMAIL2
      - ACCOUNTS_EMAIL3
      - ACCOUNTS_EMAIL4
      - ACCOUNTS_EMAIL5
      - ACCOUNTS_PASSWORD
      - ACCOUNTS_PASSWORD2
      - USER_EMAIL1
      - FIRSTNAME1
      - LASTNAME1
      - FIRSTNAME1LASTNAME1

  # Identity management dotnet core web app
  idammanagement:
    container_name: functional-tests_idammanagement_1
    build: ./../NICE.Identity.Management/
    links:
      - database
      - api
    # Enable browsing from the host machine on http://localhost:8080/consultations
    ports:
      - 8080:8080
    environment:
      - AUTHCONFIGURATION_AUTH_SERVICE_URI
      - AUTHCONFIGURATION_API_IDENTIFIER
      - ALPHA_AUTH_SERVICE_URI
      - ALPHA_USER_API
      - ALPHA_API_KEY
      - REACT_APP_API_BASE_URL
      - DEFAULT_CONNECTION
      - WEBAPP_DOMAIN
      - WEBAPP_CLIENTID
      - WEBAPP_CLIENTSECRECT
      - WEBAPP_REDIRECT_URI
      - WEBAPP_LOGOUT_REDIRECT_URI
      - WEBAPP_AUTH_SERVICE_URI
      - WEBAPP_API_IDENTIFIER
      - WEBAPP_GOOGLE_TRACK_ID
      - IDENTITYAPI_AUTH_SERVICE_URI
      - IDENTITYAPI_IDENTIFIER
      - IDENTITYAPI_API_CLIENTID
      - IDENTITYAPI_API_CLIENTSECRECT
      - ASPNETCORE_ENVIRONMENT
      - REDIS_CONNECTION_STRING
    networks:
      default:
        aliases:
          - idam

  # MS SQL Server database
  database:
    container_name: functional-tests_database_1
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_SA_PASSWORD
      - COMPOSE_HTTP_TIMEOUT=200
    ports:
      - 1434:1433

  #JSON Server for Api
  api:
    container_name: functional-tests_api_1
    build: ./../NICE.Identity.Management.MockApi/
    ports:
      - 8090:8090
    environment:
      - HTTP_PORT
      - HTTPS_PORT
    volumes:
      - ./../NICE.Identity.Management.MockApi:/data
      - /data/node_modules
    command: npm start
    networks:
      default:
        aliases:
          - api

  redis:
    container_name: functional-tests_redis_1
    image: 'redis:alpine'
    #command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - '6379:6379'
    command: ['redis-server', '--appendonly', 'yes']
    #command: ["redis-server", "--bind", "redis", "--port", "6379"]

  # nginx:
  #   container_name: functional-tests_nginx_1
  #   image: nginx:latest
  #   volumes:
  #     - ./docker_ssl_proxy:/etc/nginx
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - comments
  #   networks:
  #     default:
  #       aliases:
  #         - niceorg
